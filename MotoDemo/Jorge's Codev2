

// Libraries
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

// fix definierte Servostellungen

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();



void setup() {
  // print on display
 
  //serial Debug
  //Serial.begin(9600);
  
Serial.begin(9600);

Serial.flush();
  
  // Pin D19 = int4


}

void loop() {
 
 pwm.begin();
 pwm.setPWMFreq(50);  // workingfreq MG995 50Hz
      String argument0;
      String argument1;
      String argument2;
      String Part;
      int tick;

   Serial.println("Please select mode [At Rest] or [Adjustment] or [Extend]") ;
    while (Serial.available()==0) {             //Wait for user input.
  
  }
  argument0=Serial.readString();
  delay(100);
  if(argument0 == "At Rest")
  {
    for(int h=220; h>169; h--)
    {
      pwm.setPWM(3,0,h);
      delay(25);
    }
    
pwm.setPWM(0,0,150);
pwm.setPWM(1,0,150);

    for(int j=320;j>194;j--)
   {
    Serial.println(j);
    pwm.setPWM(2,0,j);
    delay(100);
    if(j==200)
    {
      Serial.println("URA!!!");
    }
   }
    delay(1000);
    pwm.setPWM(4,0,275);
    delay(1000);
    /*
    pwm.setPWM(5,0,test);
    delay(1000);
    */
  }
  else if(argument0 == "Extend")
  {
    for(int q=170; 99<q; q--)
    {
      Serial.println("Part 0");
      Serial.println(q);
      pwm.setPWM(3,0,q);
      delay(25);
      if(q==100)
      {
          Serial.println("Ura!!!");
      }
    }
    for(int x=150; x<171; x++)
    {
      Serial.println("Part 1");
      Serial.println(x);
    pwm.setPWM(0,0,x);
    pwm.setPWM(1,0,x);
    delay(25); 
    if(x==170)
    {
      Serial.println("URA!!!");
    }
    }
    for(int y=195; y<221; y++)
    {
      Serial.println("Part 2");
      Serial.println(y);
      pwm.setPWM(2,0,y);
      delay(25);
      if(y==220)
      {
        Serial.println("URA!!!");
      }
    }
    for(int z=171; z<201; z++)
    {
      Serial.println("Part 3");
      Serial.println(z);
      pwm.setPWM(0,0,z);
      pwm.setPWM(1,0,z);
      delay(25);
      if(z==200)
      {
        Serial.println("URA!!!");
      }
    }
  
    
    for(int a=221; a<281; a++)
    {
      Serial.println("Part 4");
      pwm.setPWM(2,0,a);
      delay(25);
      if(a==25)
      {
        Serial.println("URA!!!");
      }
    }
    for(int b=200 ;b<251; b++)
    {
      Serial.println("Part 5");
      pwm.setPWM(0,0,b);
      pwm.setPWM(1,0,b);
      delay(25);
      if(b==250)
      {
        Serial.println("URA!!!");
      }
    }
    for(int v=280; v<301; v++)
    {
      Serial.println("Part 5.5");
      pwm.setPWM(2,0,v);
      delay(25);
      if(v==25)
      {
        Serial.println("URA!!!");
      }
    }
    for(int c=250; c<301; c++)
    {
      Serial.println("Part 6");
      pwm.setPWM(0,0,c);
      pwm.setPWM(1,0,c);
      delay(25);
      if(c==250)
      {
        Serial.println("URA!!!");
      }
    }
    for(int d=300; d<321; d++)
    {
      Serial.println("Part 7");
      pwm.setPWM(2,0,d);
      delay(25);
      
    }
    for(int e=100;e<221;e++)
   {
    Serial.println("part 8");
    pwm.setPWM(3,0,e);
    delay(25);
   }
  }
  
  else if(argument0 == "Adjustment")
    {
         Serial.println("Please enter Arm part: "); //Prompt User for location.
  while (Serial.available()==0) {             //Wait for user input.
  
  }
  argument1=Serial.readString();                 //Read user input into location.
  delay(100);
  
  if(argument1 == "fingers")
{ 
  Serial.println("Please Enter tick for position from 270(close) or 300(open)");   //Prompt User for tick.
  while (Serial.available()==0) {
  }
  argument2=Serial.readString();                    //Read user input into tick.
  tick=argument2.toInt();
   while(tick < 270 or tick > 300)
  {
    Serial.println("ERROR Please Enter tick for position for 270(close) to 300(open)");
    while (Serial.available()==0) {             //Wait for user input.

  }
    argument2=Serial.readString();                    
    tick=argument2.toInt();
  }
}
else if(argument1 == "base")
{
  Serial.println("Please Enter tick for position from 150(40°) to 450(180°)");   //Prompt User for tick.
  while (Serial.available()==0) {
    
  }
  argument2=Serial.readString();                    //Read user input into tick.
  tick=argument2.toInt();
 while(tick < 150 or tick > 450)
  {
    Serial.println("ERROR Please Enter tick for position from 150(40°) to 450(180°)");
    while (Serial.available()==0) {             //Wait for user input.

  }
    argument2=Serial.readString();                    
    tick=argument2.toInt();
  }
}
else if(argument1 == "shoulder")
{
   Serial.println("Please Enter tick for position from 190(40°) to 455(180°)");   //Prompt User for tick.
  while (Serial.available()==0) {
    
  }
  argument2=Serial.readString();                    //Read user input into tick.
  tick=argument2.toInt();
 while(tick < 190 or tick > 455)
  {
    Serial.println("ERROR Please Enter tick for position from 190(40°) to 455(180°)");
    while (Serial.available()==0) {             //Wait for user input.

  }
    argument2=Serial.readString();                    
    tick=argument2.toInt();
  }
}
else if(argument1 == "elbow")
{
   Serial.println("Please Enter tick for position from 100(0°) to 310(135°)");   //Prompt User for tick.
  while (Serial.available()==0) {
    
  }
  argument2=Serial.readString();                    //Read user input into tick.
  tick=argument2.toInt();
 while(tick < 100 or tick > 310)
  {
    Serial.println("ERROR Please Enter tick for position from 100(0°) to 310(135°)");
    while (Serial.available()==0) {             //Wait for user input.

  }
    argument2=Serial.readString();                    
    tick=argument2.toInt();
  }
}
else if(argument1 == "wrist")
{
   Serial.println("Please Enter tick for position from 100(0°) to 445(180°)");   //Prompt User for tick.
  while (Serial.available()==0) {
    
  }
  argument2=Serial.readString();                    //Read user input into tick.
  tick=argument2.toInt();
 while(tick < 100 or tick > 445)
  {
    Serial.println("ERROR Please Enter tick for position from 100(0°) to 445(180°)");
    while (Serial.available()==0) {             //Wait for user input.

  }
    argument2=Serial.readString();                    
    tick=argument2.toInt();
  }
}
    }
  Serial.println("Part ");                    //Print out nicely formatted output.
  Serial.println(argument1);
  Serial.println("Tick");
  Serial.println(argument2);

Part=argument1;                              //Sets the variable from the user to the code.


Serial.println(tick);                    //Check if the variable went through.
Serial.println(Part);

    
    //calculating eventhandler infos

if(Part == "base")
      {

      pwm.setPWM(0, 0, tick); //set position
      pwm.setPWM(1, 0, tick);
      delay(10);
      }

    if(Part == "shoulder")
      {

      pwm.setPWM(2, 0, tick); //set position
      delay(10);
     
      }
    if(Part == "elbow")
      {

      pwm.setPWM(3, 0, tick); //set position
      delay(10);
      }

    if(Part == "wrist")
      {

      pwm.setPWM(4, 0, tick); //set position
      delay(10);
      }
    if(Part == "fingers")
      {

      pwm.setPWM(5, 0, tick); //set position
      delay(10);
      
      }
 }



